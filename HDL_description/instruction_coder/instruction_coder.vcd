$date
	Sat Oct 14 14:15:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module instruction_coder_tb $end
$var wire 5 ! rs2 [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 5 # rd [4:0] $end
$var wire 7 $ opcode [6:0] $end
$var wire 12 % immediateS [11:0] $end
$var wire 12 & immediateI [11:0] $end
$var wire 12 ' immediateB [11:0] $end
$var wire 7 ( funct7 [6:0] $end
$var wire 3 ) funct3 [2:0] $end
$var reg 32 * data_in [31:0] $end
$scope module DUT $end
$var wire 32 + data_in [31:0] $end
$var reg 3 , funct3 [2:0] $end
$var reg 7 - funct7 [6:0] $end
$var reg 12 . immediateB [11:0] $end
$var reg 12 / immediateI [11:0] $end
$var reg 12 0 immediateS [11:0] $end
$var reg 7 1 opcode [6:0] $end
$var reg 5 2 rd [4:0] $end
$var reg 5 3 rs1 [4:0] $end
$var reg 5 4 rs2 [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 4
b11111 3
b11111 2
b0 1
b111111111111 0
b111111100000 /
b111111111111 .
b1111111 -
b0 ,
b11111110000011111000111110000000 +
b11111110000011111000111110000000 *
b0 )
b1111111 (
b111111111111 '
b111111100000 &
b111111111111 %
b0 $
b11111 #
b11111 "
b0 !
$end
#20
b101111110000 '
b101111110000 .
b111111100000 %
b111111100000 0
b111111111111 &
b111111111111 /
b11111 !
b11111 4
b0 "
b0 3
b0 #
b0 2
b1111111 $
b1111111 1
b111 )
b111 ,
b11111111111100000111000001111111 *
b11111111111100000111000001111111 +
#40
